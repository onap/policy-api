{
  "comments": [
    {
      "key": {
        "uuid": "cdadbfe8_12757df5",
        "filename": "main/src/main/java/org/onap/policy/api/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-08-12T13:22:23Z",
      "side": 1,
      "message": "the only question I have is: Does the JVM print the exception information when the exception is thrown?  If not, we may need to set the Thread.UncaughtExceptionHandler for the main thread as the first thing it does.  However, if the JVM does print it, then no need to set the handler.",
      "revId": "251400e75443544e5cf76d285589ca91a92fb590",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9e93ebe_f107fab6",
        "filename": "main/src/main/java/org/onap/policy/api/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-08-12T13:43:40Z",
      "side": 1,
      "message": "I also think we should have a shared consistent output message for ALL the components. This can be used by docker services that scan the logs to determine if an image is up-and-running correctly before trying to move on to loading another image.",
      "parentUuid": "cdadbfe8_12757df5",
      "revId": "251400e75443544e5cf76d285589ca91a92fb590",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fe73cd5_e92f941a",
        "filename": "main/src/main/java/org/onap/policy/api/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-08-12T15:02:39Z",
      "side": 1,
      "message": "@Jim: Yes the exception information is getting printed into the logs. Tested this locally as well as in the pod\u0027s logs in a kubernetes setup.\n@Pam: We could have consistent output message (corresponding to specific errorCodes if we decided to go that route), but since we are going ahead with a generic errorCode of 1, and to know the actual error, we have to go to the logs anyway because the pod itself crashed, so is there a use in creating consistent messages!\nThe requirement I think is to \"Return non-zero (1 or anything else) exit code when the pod(main process) fail and assume that correct information has been already placed in the logs\"\nSorry Pam, maybe I am missing your point.",
      "parentUuid": "a9e93ebe_f107fab6",
      "revId": "251400e75443544e5cf76d285589ca91a92fb590",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}