{
  "comments": [
    {
      "key": {
        "uuid": "cdadbfe8_12757df5",
        "filename": "main/src/main/java/org/onap/policy/api/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-08-12T13:22:23Z",
      "side": 1,
      "message": "the only question I have is: Does the JVM print the exception information when the exception is thrown?  If not, we may need to set the Thread.UncaughtExceptionHandler for the main thread as the first thing it does.  However, if the JVM does print it, then no need to set the handler.",
      "revId": "251400e75443544e5cf76d285589ca91a92fb590",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9e93ebe_f107fab6",
        "filename": "main/src/main/java/org/onap/policy/api/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-08-12T13:43:40Z",
      "side": 1,
      "message": "I also think we should have a shared consistent output message for ALL the components. This can be used by docker services that scan the logs to determine if an image is up-and-running correctly before trying to move on to loading another image.",
      "parentUuid": "cdadbfe8_12757df5",
      "revId": "251400e75443544e5cf76d285589ca91a92fb590",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fe73cd5_e92f941a",
        "filename": "main/src/main/java/org/onap/policy/api/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-08-12T15:02:39Z",
      "side": 1,
      "message": "@Jim: Yes the exception information is getting printed into the logs. Tested this locally as well as in the pod\u0027s logs in a kubernetes setup.\n@Pam: We could have consistent output message (corresponding to specific errorCodes if we decided to go that route), but since we are going ahead with a generic errorCode of 1, and to know the actual error, we have to go to the logs anyway because the pod itself crashed, so is there a use in creating consistent messages!\nThe requirement I think is to \"Return non-zero (1 or anything else) exit code when the pod(main process) fail and assume that correct information has been already placed in the logs\"\nSorry Pam, maybe I am missing your point.",
      "parentUuid": "a9e93ebe_f107fab6",
      "revId": "251400e75443544e5cf76d285589ca91a92fb590",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "022da2e5_6a0cb685",
        "filename": "main/src/main/java/org/onap/policy/api/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-08-12T15:19:12Z",
      "side": 1,
      "message": "What I\u0027m saying is this should be a public static final String in a common file. API, PAP and PDP components use that string to formulate its message to the logs. now we can use say fabric8 to determine if our docker image is up-and-running or failed.\nFor example, mariadb image dumps a final log message that is used to determine it is running:\n               \u003cwait\u003e\n                  \u003ctime\u003e20000\u003c/time\u003e\n                  \u003clog\u003e.*port: 3306  mariadb.org binary distribution\u003c/log\u003e\n                \u003c/wait\u003e\nPolicy components should have the same consistent message both for failure and success that can be used to synch up image startup.",
      "range": {
        "startLine": 84,
        "startChar": 16,
        "endLine": 84,
        "endChar": 95
      },
      "revId": "251400e75443544e5cf76d285589ca91a92fb590",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "620580a3_c70b75f9",
        "filename": "main/src/main/java/org/onap/policy/api/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-08-12T15:35:18Z",
      "side": 1,
      "message": "Isn\u0027t it sufficient, to indicate failure, that it exits with a non-zero status?\n\nSeems like we could address message consistency in a future \"Technical Debt\" epic.",
      "parentUuid": "022da2e5_6a0cb685",
      "range": {
        "startLine": 84,
        "startChar": 16,
        "endLine": 84,
        "endChar": 95
      },
      "revId": "251400e75443544e5cf76d285589ca91a92fb590",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67646959_5441d6f7",
        "filename": "main/src/main/java/org/onap/policy/api/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-08-12T16:24:53Z",
      "side": 1,
      "message": "For the purposes of this jira, but we lack an overall message to say everything is good also. Since we are doing the messages now, and it really isn\u0027t a lot of work...why not",
      "parentUuid": "620580a3_c70b75f9",
      "range": {
        "startLine": 84,
        "startChar": 16,
        "endLine": 84,
        "endChar": 95
      },
      "revId": "251400e75443544e5cf76d285589ca91a92fb590",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}