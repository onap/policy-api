{
  "comments": [
    {
      "key": {
        "uuid": "c47687c2_ffb2d8c8",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/ApiRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 2787
      },
      "writtenOn": "2019-03-21T07:37:13Z",
      "side": 1,
      "message": "Would it not be better to just return whats in the PfModelException messages rather than checking everything in this class and effectively reducing the detail of the messages returned? Sending back just a message explaining the status code doesn\u0027t really help users with finding the cause of errors.\n\nIt is usually better to return as much information as possible to users. The error messages in the exceptions give detailed information on what has happened. Returning this information in as much detail as possible gives users help to fix problems themselves (such as misconfigurations) rater than raising issues with us later.\n\nAlso most of the errors returned are in PfModelRuntimeException exceptions, which are not caught. policy-models is not consistent in returning PfModelException/PfModelRuntimeException I will fix that.\n\nI would suggest something like:\n\ntry {\n    blah blah blah\n}\ncatch (PfModelException pfme) {\n    return addLoggingHeaders(addVersionControlHeaders(\n                    Response.status(pfme.getStatusCode())), requestId)\n                    .entity(getErrorMessage(pfme)).build();\n}\n\n\n    private static String getErrorMessage(final PfModelException pfme) {\n        StringBuilder stringBuilder \u003d new StringBuilder();\n\n        stringBuilder.append(\"Server returned: \");\n        stringBuilder.append(pfme.getStatusCode().toString());\n        stringBuilder.append(\"\\nDetailed Message:\\n\");\n        stringBuilder.append(pfme.getCascadedMessage());\n        stringBuilder.append(\"\\nStack Trace:\\n\");\n        stringBuilder.append(ExceptionUtils.getStackTrace(pfme));\n\n        return stringBuilder.toString();\n    }",
      "range": {
        "startLine": 86,
        "startChar": 13,
        "endLine": 86,
        "endChar": 30
      },
      "revId": "6f6dfa937c10b92eca25875ef0ea617cd53b38fe",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d10eb777_9a8c59f5",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/ApiRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 2787
      },
      "writtenOn": "2019-03-21T07:37:13Z",
      "side": 1,
      "message": "Other responses other than INTERNAL_SERVER_ERROR are possible. The response status, message and other information should be read from the PfModelException. Please also read and return the information in the getCascadedMessage().\n\nYou also need to catch PfModelRuntimeException exceptions.",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 237,
        "endChar": 1
      },
      "revId": "6f6dfa937c10b92eca25875ef0ea617cd53b38fe",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce2e049b_cddaae59",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/ApiRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 302,
      "author": {
        "id": 2787
      },
      "writtenOn": "2019-03-21T07:37:13Z",
      "side": 1,
      "message": "See comment above. Also you do not need to branch on the response status returned to you, just return what you get.",
      "range": {
        "startLine": 293,
        "startChar": 2,
        "endLine": 302,
        "endChar": 9
      },
      "revId": "6f6dfa937c10b92eca25875ef0ea617cd53b38fe",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "543efb7e_0943c4f4",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/ApiRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 2787
      },
      "writtenOn": "2019-03-21T07:37:13Z",
      "side": 1,
      "message": "Same comment",
      "range": {
        "startLine": 360,
        "startChar": 1,
        "endLine": 369,
        "endChar": 9
      },
      "revId": "6f6dfa937c10b92eca25875ef0ea617cd53b38fe",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}