{
  "comments": [
    {
      "key": {
        "uuid": "31762aea_395897fd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-08-19T15:07:16Z",
      "side": 1,
      "message": "lines are too long",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 85
      },
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d3336b6_666bc970",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-08-19T17:28:54Z",
      "side": 1,
      "message": "I think we should distinguish with different error codes between \"alive\" and \"cannot connect to the db at present\".   \"cannot connect to db\" may be transitory which we see at times.",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21ca5a84_a7f54fc2",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-08-19T17:48:04Z",
      "side": 1,
      "message": "hmm, yeah that transitory thing is an issue - don\u0027t want kubernetes shutting the pod down just because the DB isn\u0027t available",
      "parentUuid": "2d3336b6_666bc970",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07ed6531_205d5d96",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 3239
      },
      "writtenOn": "2021-08-19T18:33:00Z",
      "side": 1,
      "message": "I don\u0027t think we call the healthcheck api\u0027s in k8s liveness checks. It only verifies that the port 6969 is up and listening to requests. Hence, no worries on that side.\nHowever, I am okay to use a different error code for db connectivity issues. Any suggestions on what code to use?",
      "parentUuid": "21ca5a84_a7f54fc2",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5ebd403_bbb8b086",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-08-19T15:07:16Z",
      "side": 1,
      "message": "is this a light-weight query?",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e40b4d6_eb19fb7d",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 3239
      },
      "writtenOn": "2021-08-19T15:15:05Z",
      "side": 1,
      "message": "It will try to fetch all the policies from db. I thought the filtered one\u0027s will consume more resources. Let me see if I can find any other.\nAny suggestions?",
      "parentUuid": "c5ebd403_bbb8b086",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53b5b9dc_bbf89485",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 57
      },
      "writtenOn": "2021-08-19T15:21:10Z",
      "side": 1,
      "message": "maybe just get a DESC of the table?? May need to add a method to the provider. But those are pretty quick.",
      "parentUuid": "0e40b4d6_eb19fb7d",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68036f4b_462339cf",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 3239
      },
      "writtenOn": "2021-08-19T15:30:01Z",
      "side": 1,
      "message": "Yeah, I can do that. Will require adding a method in policy/models db related classes.\n\nSeems we are fetching the stored service template from db every time and performing filters on top of it at application level. And then generating the return service template. So, fetching all policies should be okay.\n\nLet me know the preference and I can change if needed.",
      "parentUuid": "0e40b4d6_eb19fb7d",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0346b0f2_7495f278",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-08-19T15:47:48Z",
      "side": 1,
      "message": "maybe just query for the root policy by name and version? (could also trreat any not-found exception as \"true\")",
      "parentUuid": "68036f4b_462339cf",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8de83f7_b013404f",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 3239
      },
      "writtenOn": "2021-08-19T15:59:31Z",
      "side": 1,
      "message": "sorry I didn\u0027t understood Jim, root policy?",
      "parentUuid": "0346b0f2_7495f278",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e3dcedb_4a722ae4",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-08-19T17:28:54Z",
      "side": 1,
      "message": "I think these would be executed in ONAP every couple minutes if I recall correctly,  any concerns about the load in the DB, we know from previous tests that there is a large number of dips from the models framework?",
      "parentUuid": "d8de83f7_b013404f",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96353130_5d23e4b6",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-08-19T17:48:04Z",
      "side": 1,
      "message": "I was thinking you could query for a particular policy, which should be fast.  To avoid the likelihood of it generating a not-found error, could query for a policy that\u0027s almost always there, such as the \"Root\" policy.",
      "parentUuid": "7e3dcedb_4a722ae4",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62fdc08b_4976811a",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 3239
      },
      "writtenOn": "2021-08-19T18:33:00Z",
      "side": 1,
      "message": "As said in previous message, from a database query point of view, it doesn\u0027t matter if we fetch specific policy or all policies. As the entire toscaServiceTemplate is fetched from DB and then parsed at application level.\n\nSorry Jim, but there is nothing like \"Root\" policy. Each policy has it own unique name. Do you mean any one from here? - https://github.com/onap/policy-models/tree/master/models-examples/src/main/resources/policies\n\n@Jorge - I have not seen any component is ONAP calling health checks for policy components periodically. Please correct if I am wrong. Also, if you are referring to the integration tests, then it should be fine I believe.",
      "parentUuid": "96353130_5d23e4b6",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed05e528_829c1021",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-08-19T17:28:54Z",
      "side": 1,
      "message": "is this connection or perhaps can also be errors in the PfModel* layers?   If so, can they be distinguished, and is the \"connection check failed\" message accurate?",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dee8c5f_d1f6e822",
        "filename": "main/src/main/java/org/onap/policy/api/main/rest/provider/HealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 3239
      },
      "writtenOn": "2021-08-19T18:33:00Z",
      "side": 1,
      "message": "I think it is okay to consider any exception thrown by the database provider layer for a fetch query as problem. Because that\u0027s exactly what will happen if users trigger the REST api\u0027s.\nThe idea of adding this db check is to trigger alerts in monitoring systems if the policy/api is not able to perform database operations.\n\nIn the last db outage, we observed that none of the policy pods were complaining about it. And all the health check monitoring were going fine. Leading to a bigger site level outage.\n\nRegarding error message, I can change it to \"Api to database provider check failed\" and anyway the exception will log all the details of the failure.",
      "parentUuid": "ed05e528_829c1021",
      "revId": "4549f7308c2afedd744f78cfee17ad224c4f562d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}